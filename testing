package com.example.fuput_ulfa_171236;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import android.Manifest;
import android.app.AlertDialog;
import android.app.DatePickerDialog;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.Toast;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;

public class registrasiactivity extends AppCompatActivity {
    EditText nim,nama,alamat,telepon,tempatlahir,tanggallahir;
    RadioButton lakilaki,perempuan;
    CheckBox sepeda,games,membaca,berkumpul,mendaki,sepakbola;
    Button calender,daftar;
    Calendar myCalendar;
    String filename;
    AlertDialog dialog;
    private static final int PERMISSION_REQUEST_CODE = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.registrasi_activity);

        nim = findViewById(R.id.nim);
        nama = findViewById(R.id.nama);
        alamat = findViewById(R.id.Alamat);
        telepon = findViewById(R.id.telp);
        tempatlahir = findViewById(R.id.tempatlahir);
        tanggallahir = findViewById(R.id.tanggallahir);
        lakilaki = findViewById(R.id.lakilaki);
        perempuan = findViewById(R.id.perempuan);
        sepeda = findViewById(R.id.bersepeda);
        games = findViewById(R.id.games);
        membaca = findViewById(R.id.membaca);
        berkumpul = findViewById(R.id.kumpul);
        mendaki = findViewById(R.id.mendaki);
        sepakbola = findViewById(R.id.bola);
        calender = findViewById(R.id.btntanggal);
        daftar = findViewById(R.id.daftar);

        if (Build.VERSION.SDK_INT >= 23){
            if (checkPermission()){
                // Code for above or equal 23 API Oriented Device
                // Your Permission granted already .Do next code
                } else {
                requestPermission();
                // Code for permission
                }
        }
        else {             // Code for Below 23 API Oriented Device             // Do next code         }
            }
                String s_nama = nama.getText().toString();
                String s_nim = nim.getText().toString();
                filename = Environment.getExternalStorageDirectory() + "/"+ s_nim+s_nama + ".txt";
               // Toast.makeText(registrasiactivity.this, "Tersave" + s_nim + s_nama, Toast.LENGTH_SHORT).show();
                dialog = new AlertDialog.Builder(this).create();

                myCalendar = Calendar.getInstance();
                calender.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        new DatePickerDialog(registrasiactivity.this, new DatePickerDialog.OnDateSetListener() {
                            @Override
                            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
                                myCalendar.set(Calendar.YEAR, year);
                                myCalendar.set(Calendar.MONTH, month);
                                myCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);

                                String formatTanggal = "dd-MM-yyyy";
                                SimpleDateFormat sdf = new SimpleDateFormat(formatTanggal);
                                tanggallahir.setText(sdf.format(myCalendar.getTime()));
                            }
                        },
                                myCalendar.get(Calendar.YEAR), myCalendar.get(Calendar.MONTH),
                                myCalendar.get(Calendar.DAY_OF_MONTH)).show();
                    }
                });

                daftar.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if (nim.getText().toString().equals("")) {
                            Toast.makeText(getApplicationContext(), "Nim Kosong !", Toast.LENGTH_SHORT).show();
                        } else if (nama.getText().toString().equals("")) {
                            Toast.makeText(getApplicationContext(), "Nama Kosong !", Toast.LENGTH_SHORT).show();
                        } else if (alamat.getText().toString().equals("")) {
                            Toast.makeText(getApplicationContext(), "Alamat Kosong !", Toast.LENGTH_SHORT).show();
                        } else if (telepon.getText().toString().equals("")) {
                            Toast.makeText(getApplicationContext(), "Nomor Telpon Kosong !", Toast.LENGTH_SHORT).show();
                        } else if (tempatlahir.getText().toString().equals("")) {
                            Toast.makeText(getApplicationContext(), "Tempat Lahir Kosong !", Toast.LENGTH_SHORT).show();
                        } else if (tanggallahir.getText().toString().equals("")) {
                            Toast.makeText(getApplicationContext(), "Tanggal Lahir Kosong !", Toast.LENGTH_SHORT).show();
                        } else {
                            PrintWriter pw;
                            try {
                                pw = new PrintWriter(filename);
                                pw.println(nim.getText().toString());
                                pw.println(nama.getText().toString());
                                pw.println(alamat.getText().toString());
                                pw.println(telepon.getText().toString());

                                if (lakilaki.isChecked()) {
                                    pw.println("Laki-Laki");
                                }
                                if (perempuan.isChecked()) {
                                    pw.println("Perempuan");
                                }

                                pw.println(tempatlahir.getText().toString());
                                pw.println(tanggallahir.getText().toString());

                                if (membaca.isChecked()) {
                                    pw.println("Membaca ");
                                }
                                if (games.isChecked()) {
                                    pw.println("Main Game ");
                                }
                                if (sepeda.isChecked()) {
                                    pw.println("Bersepeda ");
                                }
                                if (berkumpul.isChecked()) {
                                    pw.println("Berkumpul Dengan Teman ");
                                }
                                if (mendaki.isChecked()) {
                                    pw.println("Mendaki Gunung ");
                                }
                                if (sepakbola.isChecked()) {
                                    pw.println("Sepak Bola ");
                                }

                                pw.close();
                                dialog.setMessage("Sukses");
                                dialog.show();
                            } catch (FileNotFoundException e) {
                                e.printStackTrace();
                                Toast.makeText(getApplicationContext(), e.toString(), Toast.LENGTH_SHORT).show();
                            }

                        }


                    }

                });
            }
    private boolean checkPermission(){
        int result  = ContextCompat.checkSelfPermission(registrasiactivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE);
        if (result == PackageManager.PERMISSION_GRANTED){
            return true;
        }else{
            return false;
        }
    }
    private void requestPermission(){
        if(ActivityCompat.shouldShowRequestPermissionRationale(registrasiactivity.this, Manifest.permission.WRITE_EXTERNAL_STORAGE)){
            Toast.makeText(this, "Write External Storage permission allows us to do store images. Please allow this permission in App Settings", Toast.LENGTH_SHORT).show();
        }else{
            ActivityCompat.requestPermissions(registrasiactivity.this,new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},PERMISSION_REQUEST_CODE);
        }
    }
    @Override
    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
        switch (requestCode) {
            case PERMISSION_REQUEST_CODE:
                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    Log.e("value", "Permission Granted, Now you can use local drive .");
                } else {
                    Log.e("value", "Permission Denied, You cannot use local drive ."); }
                break;
        }
    }
}
